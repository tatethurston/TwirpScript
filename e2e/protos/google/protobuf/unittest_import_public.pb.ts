// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: google/protobuf/unittest_import_public.proto
/* eslint-disable */

import type { ByteSource, PartialDeep } from "protoscript";
import * as protoscript from "protoscript";

//========================================//
//                 Types                  //
//========================================//

export interface PublicImportMessage {
  e: number;
}

//========================================//
//        Protobuf Encode / Decode        //
//========================================//

export const PublicImportMessage = {
  /**
   * Serializes PublicImportMessage to protobuf.
   */
  encode: function (msg: PartialDeep<PublicImportMessage>): Uint8Array {
    return PublicImportMessage._writeMessage(
      msg,
      new protoscript.BinaryWriter(),
    ).getResultBuffer();
  },

  /**
   * Deserializes PublicImportMessage from protobuf.
   */
  decode: function (bytes: ByteSource): PublicImportMessage {
    return PublicImportMessage._readMessage(
      PublicImportMessage.initialize(),
      new protoscript.BinaryReader(bytes),
    );
  },

  /**
   * Initializes PublicImportMessage with all fields set to their default value.
   */
  initialize: function (
    msg?: Partial<PublicImportMessage>,
  ): PublicImportMessage {
    return {
      e: 0,
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<PublicImportMessage>,
    writer: protoscript.BinaryWriter,
  ): protoscript.BinaryWriter {
    if (msg.e) {
      writer.writeInt32(1, msg.e);
    }
    return writer;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: PublicImportMessage,
    reader: protoscript.BinaryReader,
  ): PublicImportMessage {
    while (reader.nextField()) {
      const field = reader.getFieldNumber();
      switch (field) {
        case 1: {
          msg.e = reader.readInt32();
          break;
        }
        default: {
          reader.skipField();
          break;
        }
      }
    }
    return msg;
  },
};

//========================================//
//          JSON Encode / Decode          //
//========================================//

export const PublicImportMessageJSON = {
  /**
   * Serializes PublicImportMessage to JSON.
   */
  encode: function (msg: PartialDeep<PublicImportMessage>): string {
    return JSON.stringify(PublicImportMessageJSON._writeMessage(msg));
  },

  /**
   * Deserializes PublicImportMessage from JSON.
   */
  decode: function (json: string): PublicImportMessage {
    return PublicImportMessageJSON._readMessage(
      PublicImportMessageJSON.initialize(),
      JSON.parse(json),
    );
  },

  /**
   * Initializes PublicImportMessage with all fields set to their default value.
   */
  initialize: function (
    msg?: Partial<PublicImportMessage>,
  ): PublicImportMessage {
    return {
      e: 0,
      ...msg,
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: PartialDeep<PublicImportMessage>,
  ): Record<string, unknown> {
    const json: Record<string, unknown> = {};
    if (msg.e) {
      json["e"] = msg.e;
    }
    return json;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: PublicImportMessage,
    json: any,
  ): PublicImportMessage {
    const _e_ = json["e"];
    if (_e_) {
      msg.e = protoscript.parseNumber(_e_);
    }
    return msg;
  },
};
