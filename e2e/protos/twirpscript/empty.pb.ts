// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: twirpscript/empty.proto
/* eslint-disable */

import { JSONrequest, PBrequest } from "twirpscript";
// This is the minimum version supported by the current runtime.
// If this line fails typechecking, breaking changes have been introduced and this
// file needs to be regenerated by running `npx twirpscript`.
export { MIN_SUPPORTED_VERSION_0_0_56 } from "twirpscript";
import type { ClientConfiguration } from "twirpscript";
import * as protoscript from "protoscript";

//========================================//
//          Foo Protobuf Client           //
//========================================//

export async function Bar(
  empty: protoscript.Empty,
  config?: ClientConfiguration,
): Promise<protoscript.Empty> {
  const response = await PBrequest(
    "/Foo/Bar",
    protoscript.Empty.encode(empty),
    config,
  );
  return protoscript.Empty.decode(response);
}

//========================================//
//            Foo JSON Client             //
//========================================//

export async function BarJSON(
  empty: protoscript.Empty,
  config?: ClientConfiguration,
): Promise<protoscript.Empty> {
  const response = await JSONrequest(
    "/Foo/Bar",
    protoscript.EmptyJSON.encode(empty),
    config,
  );
  return protoscript.EmptyJSON.decode(response);
}

//========================================//
//                  Foo                   //
//========================================//

export interface Foo<Context = unknown> {
  Bar: (
    empty: protoscript.Empty,
    context: Context,
  ) => Promise<protoscript.Empty> | protoscript.Empty;
}

export function createFoo<Context>(service: Foo<Context>) {
  return {
    name: "Foo",
    methods: {
      Bar: {
        name: "Bar",
        handler: service.Bar,
        input: { protobuf: protoscript.Empty, json: protoscript.EmptyJSON },
        output: { protobuf: protoscript.Empty, json: protoscript.EmptyJSON },
      },
    },
  } as const;
}
