// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: google/protobuf/unittest_import_public.proto
import type { ByteSource } from "twirpscript";
import { BinaryReader, BinaryWriter } from "twirpscript";

//========================================//
//                 Types                  //
//========================================//

export interface PublicImportMessage {
  e: number;
}

//========================================//
//        Protobuf Encode / Decode        //
//========================================//

export const PublicImportMessage = {
  writeMessage: function (
    msg: PublicImportMessage,
    writer: BinaryWriter
  ): void {
    if (msg.e) {
      writer.writeInt32(1, msg.e);
    }
  },

  encode: function (publicImportMessage: PublicImportMessage): Uint8Array {
    const writer = new BinaryWriter();
    PublicImportMessage.writeMessage(publicImportMessage, writer);
    return writer.getResultBuffer();
  },

  readMessage: function (
    msg: Partial<PublicImportMessage>,
    reader: BinaryReader
  ): void {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      const field = reader.getFieldNumber();
      switch (field) {
        case 1: {
          msg.e = reader.readInt32();
          break;
        }
        default: {
          reader.skipField();
          break;
        }
      }
    }
    if (!msg.e) {
      msg.e = 0;
    }
  },

  decode: function (bytes: ByteSource): PublicImportMessage {
    const reader = new BinaryReader(bytes);
    const message = {};
    PublicImportMessage.readMessage(message, reader);
    return message as PublicImportMessage;
  },

  defaultValue: function (): PublicImportMessage {
    return {
      e: 0,
    };
  },
};
